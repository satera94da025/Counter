[{"C:\\Users\\bogda\\WebstormProjects\\Counter\\my-app\\src\\index.tsx":"1","C:\\Users\\bogda\\WebstormProjects\\Counter\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\bogda\\WebstormProjects\\Counter\\my-app\\src\\App.tsx":"3","C:\\Users\\bogda\\WebstormProjects\\Counter\\my-app\\src\\Counter.tsx":"4","C:\\Users\\bogda\\WebstormProjects\\Counter\\my-app\\src\\SecondCounter.tsx":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":1827,"mtime":1608922804123,"results":"9","hashOfConfig":"7"},{"size":901,"mtime":1609005539138,"results":"10","hashOfConfig":"7"},{"size":1818,"mtime":1609009750645,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ag4w74",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\bogda\\WebstormProjects\\Counter\\my-app\\src\\index.tsx",[],["24","25"],"C:\\Users\\bogda\\WebstormProjects\\Counter\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\bogda\\WebstormProjects\\Counter\\my-app\\src\\App.tsx",[],"C:\\Users\\bogda\\WebstormProjects\\Counter\\my-app\\src\\Counter.tsx",["26"],"import React from \"react\";\r\nimport s from './Counter.module.css'\r\nimport {ErrorType} from \"./App\";\r\n\r\ntype PropsType = {\r\n    addCount: () => void\r\n    count: number\r\n    resCount: () => void\r\n    maxValue: number\r\n    error: ErrorType\r\n}\r\n\r\nfunction Counter(props: PropsType) {\r\n\r\n    function addCount() {\r\n        props.addCount()\r\n    }\r\n\r\n    function resCount() {\r\n        props.resCount()\r\n    }\r\n\r\n    return (<div className={s.counterBlock}>\r\n        <div className={s.counter}>\r\n            <a className={props.count === props.maxValue ? s.maxValue : ''}>{props.error || props.count} </a>\r\n        </div>\r\n        <div className={s.buttons}>\r\n            <button className={s.button} disabled={props.count === props.maxValue} onClick={addCount}>inc</button>\r\n            <button className={s.button} onClick={resCount}>reset</button>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default Counter","C:\\Users\\bogda\\WebstormProjects\\Counter\\my-app\\src\\SecondCounter.tsx",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":25,"column":13,"nodeType":"33","endLine":25,"endColumn":77},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]